angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(e,n){t.currentUser=n})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(n,o){e.login(n,o).then(function(e){t.$emit("login",e),console.log(e)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostSvc",function(t,e){t.addPost=function(){t.postBody&&PostScv.create({username:"dickeyxxx",body:t.postBody}).success(function(e){t.posts.unshift(e),t.postBody=null})},e.fetch().success(function(e){t.posts=e})}]),angular.module("app").service("PostSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(){return t.post("/api/posts",post)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(t,e){t.register=function(n,o){e.register(n,o).then(function(e){t.$emit("login",e)})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"/templates/posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users").then(function(t){return t.data})},e.login=function(n,o){return t.post("/api/sessions",{username:n,password:o}).then(function(n){return e.token=n.data,t.defaults.headers.common["X-Auth"]=n.data,e.getUser()})},e.register=function(n,o){return t.post("/api/users",{username:n,password:o}).then(function(){return e.login(n,o)})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLnN2Yy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsIiRlbWl0IiwiY29uc29sZSIsImxvZyIsIlBvc3RTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJQb3N0U2N2IiwiY3JlYXRlIiwiYm9keSIsInN1Y2Nlc3MiLCJwb3N0IiwicG9zdHMiLCJ1bnNoaWZ0IiwiZmV0Y2giLCJzZXJ2aWNlIiwiJGh0dHAiLCJ0aGlzIiwiZ2V0IiwicmVnaXN0ZXIiLCJjb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJ0ZW1wbGF0ZVVybCIsInN2YyIsImdldFVzZXIiLCJyZXNwb25zZSIsImRhdGEiLCJ0b2tlbiIsImRlZmF1bHRzIiwiaGVhZGVycyIsImNvbW1vbiJdLCJtYXBwaW5ncyI6IkFBQ0FBLFFBQVFDLE9BQU8sT0FDWCxZQ0ZKRCxRQUFRQyxPQUFPLE9BQ2RDLFdBQVcsbUJBQUEsU0FBbUIsU0FBU0MsR0FDdENBLEVBQU9DLElBQUksUUFBUyxTQUFTQyxFQUFHQyxHQUM3QkgsRUFBT0ksWUFBYUQsT0NIekJOLFFBQVFDLE9BQU8sT0FDZEMsV0FBVyxhQUFBLFNBQUEsVUFBYSxTQUFTQyxFQUFRSyxHQUN4Q0wsRUFBT00sTUFBUSxTQUFTQyxFQUFVQyxHQUNoQ0gsRUFBUUMsTUFBTUMsRUFBVUMsR0FDdkJDLEtBQUssU0FBU04sR0FDYkgsRUFBT1UsTUFBTSxRQUFTUCxHQUN0QlEsUUFBUUMsSUFBSVQsU0NObEJOLFFBQVFDLE9BQU8sT0FDZEMsV0FBVyxhQUFBLFNBQUEsVUFBYSxTQUFVQyxFQUFRYSxHQUUxQ2IsRUFBT2MsUUFBVSxXQUVaZCxFQUFPZSxVQUNSQyxRQUFRQyxRQUNOVixTQUFVLFlBQ1ZXLEtBQVVsQixFQUFPZSxXQUVsQkksUUFBUSxTQUFVQyxHQUNqQnBCLEVBQU9xQixNQUFNQyxRQUFRRixHQUNyQnBCLEVBQU9lLFNBQVcsUUFLeEJGLEVBQVFVLFFBQ1BKLFFBQVEsU0FBVUUsR0FDakJyQixFQUFPcUIsTUFBUUEsT0NuQmxCeEIsUUFBUUMsT0FBTyxPQUNkMEIsUUFBUSxXQUFBLFFBQVcsU0FBU0MsR0FDMUJDLEtBQUtILE1BQVEsV0FDUixNQUFPRSxHQUFNRSxJQUFJLGVBRXRCRCxLQUFLVCxPQUFTLFdBQ1QsTUFBT1EsR0FBTUwsS0FBSyxhQUFjQSxVQ054Q3ZCLFFBQVFDLE9BQU8sT0FDZEMsV0FBVyxnQkFBQSxTQUFBLFVBQWdCLFNBQVVDLEVBQVFLLEdBQzVDTCxFQUFPNEIsU0FBVyxTQUFVckIsRUFBVUMsR0FDcENILEVBQVF1QixTQUFTckIsRUFBVUMsR0FDMUJDLEtBQUssU0FBVU4sR0FDZEgsRUFBT1UsTUFBTSxRQUFTUCxTQ0w1Qk4sUUFBUUMsT0FBTyxPQUNkK0IsUUFBQSxpQkFBTyxTQUFVQyxHQUNoQkEsRUFDQ0MsS0FBSyxLQUFjaEMsV0FBWSxZQUFhaUMsWUFBYSwwQkFDekRELEtBQUssYUFBY2hDLFdBQVksZUFBZ0JpQyxZQUFhLDZCQUM1REQsS0FBSyxVQUFjaEMsV0FBWSxZQUFhaUMsWUFBYSw2QkNMNURuQyxRQUFRQyxPQUFPLE9BQ2QwQixRQUFRLFdBQUEsUUFBVyxTQUFTQyxHQUMzQixHQUFJUSxHQUFNUCxJQUNWTyxHQUFJQyxRQUFVLFdBQ1osTUFBT1QsR0FBTUUsSUFBSSxjQUNoQmxCLEtBQUssU0FBVTBCLEdBQ2IsTUFBT0EsR0FBU0MsUUFHckJILEVBQUkzQixNQUFRLFNBQVNDLEVBQVVDLEdBQzdCLE1BQU9pQixHQUFNTCxLQUFLLGlCQUNoQmIsU0FBVUEsRUFBVUMsU0FBVUEsSUFDN0JDLEtBQUssU0FBVTBCLEdBR2hCLE1BRkFGLEdBQUlJLE1BQVFGLEVBQVNDLEtBQ3JCWCxFQUFNYSxTQUFTQyxRQUFRQyxPQUFPLFVBQVlMLEVBQVNDLEtBQzVDSCxFQUFJQyxhQUdmRCxFQUFJTCxTQUFXLFNBQVVyQixFQUFVQyxHQUNoQyxNQUFPaUIsR0FBTUwsS0FBSyxjQUNmYixTQUFVQSxFQUFVQyxTQUFVQSxJQUM5QkMsS0FBSyxXQUNMLE1BQU93QixHQUFJM0IsTUFBTUMsRUFBVUMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9jcmVhdGUgb3VyIGFwcCBtb2R1bGVcbmFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXG4gICAgJ25nUm91dGUnXG5dKVxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdBcHBsaWNhdGlvbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUpeyBcbiAgJHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbihfLCB1c2VyKXtcbiAgICAgJHNjb3BlLmN1cnJlbnRVc2VyPSB1c2VyXG4gIH0pXG59KVxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMpe1xuICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQpe1xuICAgIFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgIC50aGVuKGZ1bmN0aW9uKHVzZXIpe1xuICAgICAgJHNjb3BlLiRlbWl0KCdsb2dpbicsIHVzZXIpXG4gICAgICBjb25zb2xlLmxvZyh1c2VyKVxuICAgIH0pXG4gIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdQb3N0c0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBQb3N0U3ZjKXtcbiAvL3RoZSBmdW5jdGlvbiBydW5zIHdoZW4gdGhlIFwiQWRkIFBvc3RcIiBidXR0b24gaXMgY2xpY2tlZFxuICRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24oKXtcbiAgIC8vb25seSBhZGQgYSBwb3N0IGlmIHRoZXJlIGlzIGEgYm9keVxuICAgaWYoJHNjb3BlLnBvc3RCb2R5KXtcbiAgICAgUG9zdFNjdi5jcmVhdGUoe1xuICAgICAgIHVzZXJuYW1lOiAnZGlja2V5eHh4JyxcbiAgICAgICBib2R5OiAgICAgJHNjb3BlLnBvc3RCb2R5XG4gICAgIH0pXG4gICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0KXtcbiAgICAgICAkc2NvcGUucG9zdHMudW5zaGlmdChwb3N0KVxuICAgICAgICRzY29wZS5wb3N0Qm9keSA9IG51bGxcbiAgICAgfSlcbiAgIH1cbiB9XG5cbiBQb3N0U3ZjLmZldGNoKClcbiAuc3VjY2VzcyhmdW5jdGlvbiAocG9zdHMpe1xuICAgJHNjb3BlLnBvc3RzID0gcG9zdHNcbiB9KVxufSlcblxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnUG9zdFN2YycsIGZ1bmN0aW9uKCRodHRwKXtcbiAgIHRoaXMuZmV0Y2ggPSBmdW5jdGlvbigpe1xuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJylcbiAgIH1cbiAgIHRoaXMuY3JlYXRlID0gZnVuY3Rpb24oKXtcbiAgICAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvcG9zdHMnLCBwb3N0KVxuICAgfVxufSlcblxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignUmVnaXN0ZXJDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuICAkc2NvcGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG4gICAgVXNlclN2Yy5yZWdpc3Rlcih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgLnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcbiAgICAgICRzY29wZS4kZW1pdCgnbG9naW4nLCB1c2VyKVxuICAgIH0pXG4gIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKXtcbiAgJHJvdXRlUHJvdmlkZXJcbiAgLndoZW4oJy8nLCAgICAgICAgIHtjb250cm9sbGVyOiAnUG9zdHNDdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL3Bvc3RzLmh0bWwnfSlcbiAgLndoZW4oJy9yZWdpc3RlcicsIHtjb250cm9sbGVyOiAnUmVnaXN0ZXJDdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL3JlZ2lzdGVyLmh0bWwnfSlcbiAgLndoZW4oJy9sb2dpbicsICAgIHtjb250cm9sbGVyOiAnTG9naW5DdHJsJywgdGVtcGxhdGVVcmw6ICcvdGVtcGxhdGVzL2xvZ2luLmh0bWwnfSlcbn0pXG5cbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLnNlcnZpY2UoJ1VzZXJTdmMnLCBmdW5jdGlvbigkaHR0cCl7XG4gIHZhciBzdmMgPSB0aGlzXG4gIHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3VzZXJzJylcbiAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2Upe1xuICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhXG4gICAgfSlcbiAgfVxuICBzdmMubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQpe1xuICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Nlc3Npb25zJywge1xuICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcbiAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSl7XG4gICAgICBzdmMudG9rZW4gPSByZXNwb25zZS5kYXRhXG4gICAgICAkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vblsnWC1BdXRoJ10gPSByZXNwb25zZS5kYXRhXG4gICAgICByZXR1cm4gc3ZjLmdldFVzZXIoKVxuICAgIH0pXG4gIH1cbiAgc3ZjLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCl7IFxuICAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS91c2VycycsIHtcbiAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLCBwYXNzd29yZDogcGFzc3dvcmRcbiAgICAgfSkudGhlbihmdW5jdGlvbigpe1xuICAgICAgICByZXR1cm4gc3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcbiAgICAgfSlcbiAgfVxufSlcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
