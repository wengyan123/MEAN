angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope",function(t){t.$on("login",function(e,n){t.currentUser=n})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,e){t.login=function(n,o){e.login(n,o).then(function(e){t.$emit("login",e),console.log(e)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostSvc",function(t,e){t.addPost=function(){t.postBody&&e.create({username:"dickeyxxx",body:t.postBody}).success(function(e){t.posts.unshift(e),t.postBody=null})},e.fetch().success(function(e){t.posts=e})}]),angular.module("app").service("PostSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(e){return t.post("/api/posts",e)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(t,e){t.register=function(n,o){e.register(n,o).then(function(e){t.$emit("login",e)})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"/templates/posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"/templates/register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"/templates/login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var e=this;e.getUser=function(){return t.get("/api/users").then(function(t){return t.data})},e.login=function(n,o){return t.post("/api/sessions",{username:n,password:o}).then(function(n){return e.token=n.data,t.defaults.headers.common["X-Auth"]=n.data,e.getUser()})},e.register=function(n,o){return t.post("/api/users",{username:n,password:o}).then(function(){return e.login(n,o)})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLnN2Yy5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRvbiIsIl8iLCJ1c2VyIiwiY3VycmVudFVzZXIiLCJVc2VyU3ZjIiwibG9naW4iLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsIiRlbWl0IiwiY29uc29sZSIsImxvZyIsIlBvc3RTdmMiLCJhZGRQb3N0IiwicG9zdEJvZHkiLCJjcmVhdGUiLCJib2R5Iiwic3VjY2VzcyIsInBvc3QiLCJwb3N0cyIsInVuc2hpZnQiLCJmZXRjaCIsInNlcnZpY2UiLCIkaHR0cCIsInRoaXMiLCJnZXQiLCJyZWdpc3RlciIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwic3ZjIiwiZ2V0VXNlciIsInJlc3BvbnNlIiwiZGF0YSIsInRva2VuIiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIl0sIm1hcHBpbmdzIjoiQUFDQUEsUUFBUUMsT0FBTyxPQUNYLFlDRkpELFFBQVFDLE9BQU8sT0FDZEMsV0FBVyxtQkFBQSxTQUFtQixTQUFTQyxHQUN0Q0EsRUFBT0MsSUFBSSxRQUFTLFNBQVNDLEVBQUdDLEdBQzdCSCxFQUFPSSxZQUFhRCxPQ0h6Qk4sUUFBUUMsT0FBTyxPQUNkQyxXQUFXLGFBQUEsU0FBQSxVQUFhLFNBQVNDLEVBQVFLLEdBQ3hDTCxFQUFPTSxNQUFRLFNBQVNDLEVBQVVDLEdBQ2hDSCxFQUFRQyxNQUFNQyxFQUFVQyxHQUN2QkMsS0FBSyxTQUFTTixHQUNiSCxFQUFPVSxNQUFNLFFBQVNQLEdBQ3RCUSxRQUFRQyxJQUFJVCxTQ05sQk4sUUFBUUMsT0FBTyxPQUNkQyxXQUFXLGFBQUEsU0FBQSxVQUFhLFNBQVVDLEVBQVFhLEdBRTFDYixFQUFPYyxRQUFVLFdBRVpkLEVBQU9lLFVBQ1JGLEVBQVFHLFFBQ05ULFNBQVUsWUFDVlUsS0FBVWpCLEVBQU9lLFdBRWxCRyxRQUFRLFNBQVVDLEdBQ2pCbkIsRUFBT29CLE1BQU1DLFFBQVFGLEdBQ3JCbkIsRUFBT2UsU0FBVyxRQUt4QkYsRUFBUVMsUUFDUEosUUFBUSxTQUFVRSxHQUNqQnBCLEVBQU9vQixNQUFRQSxPQ25CbEJ2QixRQUFRQyxPQUFPLE9BQ2R5QixRQUFRLFdBQUEsUUFBVyxTQUFTQyxHQUMxQkMsS0FBS0gsTUFBUSxXQUNSLE1BQU9FLEdBQU1FLElBQUksZUFFdEJELEtBQUtULE9BQVMsU0FBU0csR0FDbEIsTUFBT0ssR0FBTUwsS0FBSyxhQUFjQSxPQ054Q3RCLFFBQVFDLE9BQU8sT0FDZEMsV0FBVyxnQkFBQSxTQUFBLFVBQWdCLFNBQVVDLEVBQVFLLEdBQzVDTCxFQUFPMkIsU0FBVyxTQUFVcEIsRUFBVUMsR0FDcENILEVBQVFzQixTQUFTcEIsRUFBVUMsR0FDMUJDLEtBQUssU0FBVU4sR0FDZEgsRUFBT1UsTUFBTSxRQUFTUCxTQ0w1Qk4sUUFBUUMsT0FBTyxPQUNkOEIsUUFBQSxpQkFBTyxTQUFVQyxHQUNoQkEsRUFDQ0MsS0FBSyxLQUFjL0IsV0FBWSxZQUFhZ0MsWUFBYSwwQkFDekRELEtBQUssYUFBYy9CLFdBQVksZUFBZ0JnQyxZQUFhLDZCQUM1REQsS0FBSyxVQUFjL0IsV0FBWSxZQUFhZ0MsWUFBYSw2QkNMNURsQyxRQUFRQyxPQUFPLE9BQ2R5QixRQUFRLFdBQUEsUUFBVyxTQUFTQyxHQUMzQixHQUFJUSxHQUFNUCxJQUNWTyxHQUFJQyxRQUFVLFdBQ1osTUFBT1QsR0FBTUUsSUFBSSxjQUNoQmpCLEtBQUssU0FBVXlCLEdBQ2IsTUFBT0EsR0FBU0MsUUFHckJILEVBQUkxQixNQUFRLFNBQVNDLEVBQVVDLEdBQzdCLE1BQU9nQixHQUFNTCxLQUFLLGlCQUNoQlosU0FBVUEsRUFBVUMsU0FBVUEsSUFDN0JDLEtBQUssU0FBVXlCLEdBR2hCLE1BRkFGLEdBQUlJLE1BQVFGLEVBQVNDLEtBQ3JCWCxFQUFNYSxTQUFTQyxRQUFRQyxPQUFPLFVBQVlMLEVBQVNDLEtBQzVDSCxFQUFJQyxhQUdmRCxFQUFJTCxTQUFXLFNBQVVwQixFQUFVQyxHQUNoQyxNQUFPZ0IsR0FBTUwsS0FBSyxjQUNmWixTQUFVQSxFQUFVQyxTQUFVQSxJQUM5QkMsS0FBSyxXQUNMLE1BQU91QixHQUFJMUIsTUFBTUMsRUFBVUMiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9jcmVhdGUgb3VyIGFwcCBtb2R1bGVcbmFuZ3VsYXIubW9kdWxlKCdhcHAnLCBbXG4gICAgJ25nUm91dGUnXG5dKVxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdBcHBsaWNhdGlvbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUpeyBcbiAgJHNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbihfLCB1c2VyKXtcbiAgICAgJHNjb3BlLmN1cnJlbnRVc2VyPSB1c2VyXG4gIH0pXG59KVxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdMb2dpbkN0cmwnLCBmdW5jdGlvbigkc2NvcGUsIFVzZXJTdmMpe1xuICAkc2NvcGUubG9naW4gPSBmdW5jdGlvbih1c2VybmFtZSwgcGFzc3dvcmQpe1xuICAgIFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgIC50aGVuKGZ1bmN0aW9uKHVzZXIpe1xuICAgICAgJHNjb3BlLiRlbWl0KCdsb2dpbicsIHVzZXIpXG4gICAgICBjb25zb2xlLmxvZyh1c2VyKVxuICAgIH0pXG4gIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdQb3N0c0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBQb3N0U3ZjKXtcbiAvL3RoZSBmdW5jdGlvbiBydW5zIHdoZW4gdGhlIFwiQWRkIFBvc3RcIiBidXR0b24gaXMgY2xpY2tlZFxuICRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24oKXtcbiAgIC8vb25seSBhZGQgYSBwb3N0IGlmIHRoZXJlIGlzIGEgYm9keVxuICAgaWYoJHNjb3BlLnBvc3RCb2R5KXtcbiAgICAgUG9zdFN2Yy5jcmVhdGUoe1xuICAgICAgIHVzZXJuYW1lOiAnZGlja2V5eHh4JyxcbiAgICAgICBib2R5OiAgICAgJHNjb3BlLnBvc3RCb2R5XG4gICAgIH0pXG4gICAgIC5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0KXtcbiAgICAgICAkc2NvcGUucG9zdHMudW5zaGlmdChwb3N0KVxuICAgICAgICRzY29wZS5wb3N0Qm9keSA9IG51bGxcbiAgICAgfSlcbiAgIH1cbiB9XG5cbiBQb3N0U3ZjLmZldGNoKClcbiAuc3VjY2VzcyhmdW5jdGlvbiAocG9zdHMpe1xuICAgJHNjb3BlLnBvc3RzID0gcG9zdHNcbiB9KVxufSlcblxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnUG9zdFN2YycsIGZ1bmN0aW9uKCRodHRwKXtcbiAgIHRoaXMuZmV0Y2ggPSBmdW5jdGlvbigpe1xuICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KCcvYXBpL3Bvc3RzJylcbiAgIH1cbiAgIHRoaXMuY3JlYXRlID0gZnVuY3Rpb24ocG9zdCl7XG4gICAgICAgIHJldHVybiAkaHR0cC5wb3N0KCcvYXBpL3Bvc3RzJywgcG9zdClcbiAgIH1cbn0pXG5cbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ1JlZ2lzdGVyQ3RybCcsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcbiAgJHNjb3BlLnJlZ2lzdGVyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIFVzZXJTdmMucmVnaXN0ZXIodXNlcm5hbWUsIHBhc3N3b3JkKVxuICAgIC50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG4gICAgICAkc2NvcGUuJGVtaXQoJ2xvZ2luJywgdXNlcilcbiAgICB9KVxuICB9XG59KVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29uZmlnKGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcil7XG4gICRyb3V0ZVByb3ZpZGVyXG4gIC53aGVuKCcvJywgICAgICAgICB7Y29udHJvbGxlcjogJ1Bvc3RzQ3RybCcsIHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9wb3N0cy5odG1sJ30pXG4gIC53aGVuKCcvcmVnaXN0ZXInLCB7Y29udHJvbGxlcjogJ1JlZ2lzdGVyQ3RybCcsIHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9yZWdpc3Rlci5odG1sJ30pXG4gIC53aGVuKCcvbG9naW4nLCAgICB7Y29udHJvbGxlcjogJ0xvZ2luQ3RybCcsIHRlbXBsYXRlVXJsOiAnL3RlbXBsYXRlcy9sb2dpbi5odG1sJ30pXG59KVxuXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5zZXJ2aWNlKCdVc2VyU3ZjJywgZnVuY3Rpb24oJGh0dHApe1xuICB2YXIgc3ZjID0gdGhpc1xuICBzdmMuZ2V0VXNlciA9IGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS91c2VycycpXG4gICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKXtcbiAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YVxuICAgIH0pXG4gIH1cbiAgc3ZjLmxvZ2luID0gZnVuY3Rpb24odXNlcm5hbWUsIHBhc3N3b3JkKXtcbiAgICByZXR1cm4gJGh0dHAucG9zdCgnL2FwaS9zZXNzaW9ucycsIHtcbiAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2Upe1xuICAgICAgc3ZjLnRva2VuID0gcmVzcG9uc2UuZGF0YVxuICAgICAgJGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bJ1gtQXV0aCddID0gcmVzcG9uc2UuZGF0YVxuICAgICAgcmV0dXJuIHN2Yy5nZXRVc2VyKClcbiAgICB9KVxuICB9XG4gIHN2Yy5yZWdpc3RlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpeyBcbiAgICAgcmV0dXJuICRodHRwLnBvc3QoJy9hcGkvdXNlcnMnLCB7XG4gICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwgcGFzc3dvcmQ6IHBhc3N3b3JkXG4gICAgIH0pLnRoZW4oZnVuY3Rpb24oKXtcbiAgICAgICAgcmV0dXJuIHN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG4gICAgIH0pXG4gIH1cbn0pXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
